(TODO)
Dependency injection, Unit testing, Queues, Real-time events, Notifications , Livewire , Inertia.js, Laravel vapor
routes => console.php / channels.php
---
Directory configuration:
Laravel should always be served out of the root of the "web directory" configured for your web server. 
i.e Public in root , other folders out of root attached  with index file
---

Application key : 
Setting application is important. If the application key is not set, your user sessions and other encrypted data will not be secure!

--- 
.env :
Environment file having the environment variables.

if (App::environment('local')) {
    // retrive any variable from environment
}
---

// You may easily access your configuration values using the global config helper function from anywhere in your application.
$value = config('app.timezone');

---
+++++++++++++++++++++++++++
php artisan config:cache
php artisan route:cache
++++++++++++++++++++++++++++
---

Maintenance mode:
When your application is in maintenance mode, a custom view will be displayed for all requests into your application.
---
command : php artisan down
revert mointenance mode : php artisan up

---
Laravel Directory Structure :

Root directory (That are in buit-in installed project )

Many of the classes in the app directory can be generated by Artisan via commands.

The App Directory
The Broadcasting Directory
The Console Directory
The Events Directory
The Exceptions Directory
The Http Directory
The Jobs Directory
The Listeners Directory
The Mail Directory
The Notifications Directory
The Policies Directory
The Providers Directory
The Rules Directory



---
(---ROOT DIRECTORY---) 

Routes:
++ web.php => manage sessions, csrf protection , routing for website
++ api.php => manage stateless part of application , does'nt manage session.
++ console.php => 
This file is where you may define all of your Closure based console
commands. Each Closure is bound to a command instance allowing a
simple approach to interacting with each command's 

E.g:

protected function commands()
{
    // Register a new command `say:hello` using the shorthand
    // syntax. This command will be registered automatically
    // and does not have to be explicitly registered.
    $this->command('say:hello {name}', function($name) {
        $this->info("Hello, {$name}");
    });
}

++ channels.php => 

The channels.php file is where you may register all of the event broadcasting channels that your application supports.


Storage Directory:

storage directory contains your compiled Blade templates, file based sessions, file caches, and other files generated by the framework.
++ app contains files generated by system like images , files , etc
++ frame work have framework generated files
++ logs directory contains your application's log files.


Test directory :
it contain automated test's.

Vendor:
The vendor directory contains your Composer dependencies.
----



(---APP DIRECTORY---) 


